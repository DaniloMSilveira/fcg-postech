name: Pipeline CD

on:
  push:
    branches:
      - "main"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image tag
        id: tag
        run: |
          DATE=$(date +'%Y%m%d')
          # Pega a última tag publicada no ECR (ou vazio se não existir)
          LAST_TAG=$(aws ecr describe-images \
            --repository-name fcg-api \
            --query "sort_by(imageDetails,&imagePushedAt)[-1].imageTags[0]" \
            --output text || echo "")

          if [[ $LAST_TAG == "$DATE-"* ]]; then
            NUMBER=${LAST_TAG##*-}
            NUMBER=$((NUMBER + 1))
          else
            NUMBER=1
          fi

          echo "IMAGE_TAG=$DATE-$NUMBER" >> $GITHUB_ENV
          echo "New image tag: $DATE-$NUMBER"

      - name: Build and push Docker image
        run: |
          docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/fcg-api:$IMAGE_TAG ./src
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/fcg-api:$IMAGE_TAG

      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster fcg-ecs-cluster \
            --service fcg-api-service \
            --force-new-deployment \
            --region $AWS_REGION \
            --output json
